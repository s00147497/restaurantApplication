@model IEnumerable<RestaurantApplication.Models.Restaurant>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDpswHcF-6hQRysnIaTEdls4l8ATwq4x88"></script>

<head>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.0/jquery.min.js"></script>

</head>

@{
    ViewBag.Title = "Restaurants";
}

<h2>Restaurants</h2>

<p>
    @Html.ActionLink("Create New Restaurant", "Create", null, new { @class = "btn btn-success" })
    <br />
    <br />

</p>
<div id="map_canvas"></div>
<div class="container">
    <div class="row">
        <div class="span12">
            <form id="custom-search-form" class="form-search form-horizontal pull-right">
                <div class="input-append span12">
                    <input type="search" name="searchString" value="" class="search-query input-large" placeholder="Search">
                    <button type="submit" onclick="SearchString" class="btn"><i class="icon-search"></i></button>
                </div>
            </form>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-xs-12">
        <table class="table table-condensed table-striped">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.RestaurantName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RestaurantDescription)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RestaurantPhoneNo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.RestaurantAddress)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.RestaurantName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RestaurantDescription)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RestaurantPhoneNo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RestaurantAddress)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.RestaurantID }, new { @class = "btn btn-warning btn-xs" }) |
                        @Html.ActionLink("Details", "Details", new { id = item.RestaurantID }, new { @class = "btn btn-info btn-xs" }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.RestaurantID }, new { @class = "btn btn-danger btn-xs" })
                    </td>
                </tr>
            }

        </table>
    </div>
</div>

<style>
    #custom-search-form {
        margin:0;
        margin-top: 5px;
        padding: 0;
    }
 
    #custom-search-form .search-query {
        padding-right: 3px;
        padding-right: 4px \9;
        padding-left: 3px;
        padding-left: 4px \9;
        /* IE7-8 doesn't have border-radius, so don't indent the padding */
 
        margin-bottom: 0;
        -webkit-border-radius: 3px;
        -moz-border-radius: 3px;
        border-radius: 3px;
    }
 
    #custom-search-form button {
        border: 0;
        background: none;
        /** belows styles are working good */
        padding: 2px 5px;
        margin-top: 2px;
        position: relative;
        left: -28px;
        /* IE7-8 doesn't have border-radius, so don't indent the padding */
        margin-bottom: 0;
        -webkit-border-radius: 3px;
        -moz-border-radius: 3px;
        border-radius: 3px;
    }
 
    .search-query:focus + button {
        z-index: 3;   
    }

    #map_canvas {
        width:720px;
        height:600px;
        position:relative;
    }
</style>

<script type="text/javascript">


    @*<!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->*@
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var Sligo = new google.maps.LatLng(54.27661029999999, -8.47608880000007);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 14,
            center: Sligo,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // a sample list of JSON encoded data of places to visit in Tunisia
        // you can either make up a JSON list server side, or call it from a controller using JSONResult
        var data = [
                  { "Id": 1, "PlaceName": "Eala Bhan", "GeoLong": "-8.473150000000032", "GeoLat": "54.27133" },
               ];

        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        $.each(data, function (i, item) {
            var marker = new google.maps.Marker({
                'position': new google.maps.LatLng(item.GeoLong, item.GeoLat),
                'map': map,
                'title': item.PlaceName
            });

            // Make the marker-pin blue!
            marker.setIcon('http://maps.google.com/mapfiles/ms/icons/blue-dot.png')

            // put in some information about each json object - in this case, the opening hours.
            var infowindow = new google.maps.InfoWindow({
                content: "<div class='infoDiv'><h2>" + item.PlaceName + "</div></div>"
            });

            // finally hook up an "OnClick" listener to the map so it pops up out info-window when the marker-pin is clicked!
            google.maps.event.addListener(marker, 'click', function () {
                infowindow.open(map, marker);
            });

        })
    }

    //testing git
</script>